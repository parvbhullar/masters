{"ast":null,"code":"var _jsxFileName = \"/home/sunny/PycharmProjects/master/frontend/src/App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './App.css';\nimport { Button } from 'antd';\nimport Table from \"ant-responsive-table\";\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      subCategories: [],\n      categories: []\n    };\n  }\n\n  componentDidMount() {\n    const apiUrl = 'http://127.0.0.1:8000/product_list/';\n    fetch(apiUrl).then(response => response.json()).then(data => this.setState({\n      products: data\n    }));\n    const apiUrl2 = 'http://127.0.0.1:8000/sub_category_list/';\n    fetch(apiUrl2).then(response => response.json()).then(data => this.setState({\n      subCategories: data\n    }));\n    const apiUrl3 = 'http://127.0.0.1:8000/category_list/';\n    fetch(apiUrl3).then(response => response.json()).then(data => this.setState({\n      categories: data\n    }));\n  }\n\n  render() {\n    let {\n      products,\n      categories,\n      subCategories\n    } = this.state;\n    let categoryFilter = [];\n    let subCategoryFilter = [];\n\n    if (categories) {\n      categories.map((item, key) => categoryFilter.push({\n        text: item.name,\n        value: item.name\n      }));\n    }\n\n    if (subCategories) {\n      subCategories.map((item, key) => subCategoryFilter.push({\n        text: item.name,\n        value: item.name\n      }));\n    }\n\n    const columns = [{\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      sorter: (a, b) => {\n        return a.name.localeCompare(b.name);\n      },\n      sortDirections: ['descend', 'ascend']\n    }, {\n      title: 'Sub Category',\n      render: data => data.sub_category.name,\n      key: 'sub_category',\n      filters: subCategoryFilter,\n      onFilter: (value, record) => record.sub_category.name.includes(value),\n      sorter: (a, b) => {\n        return a.sub_category.name.localeCompare(b.sub_category.name);\n      },\n      sortDirections: ['descend', 'ascend']\n    }, {\n      title: 'Category',\n      render: data => data.sub_category.category.name,\n      key: 'category',\n      filters: categoryFilter,\n      onFilter: (value, record) => record.sub_category.category.name.includes(value),\n      sorter: (a, b) => {\n        return a.sub_category.category.name.localeCompare(b.sub_category.category.name);\n      },\n      sortDirections: ['descend', 'ascend']\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-operations\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.clearFilters,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, \"Add\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      antTableProps: {\n        showHeader: true,\n        columns,\n        dataSource,\n        pagination: true\n      },\n      mobileBreakPoint: 768,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/sunny/PycharmProjects/master/frontend/src/App.js"],"names":["React","ReactDOM","Button","Table","App","Component","state","products","subCategories","categories","componentDidMount","apiUrl","fetch","then","response","json","data","setState","apiUrl2","apiUrl3","render","categoryFilter","subCategoryFilter","map","item","key","push","text","name","value","columns","title","dataIndex","sorter","a","b","localeCompare","sortDirections","sub_category","filters","onFilter","record","includes","category","clearFilters","showHeader","dataSource","pagination","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css' \nimport './App.css';\n\nimport {Button } from 'antd';\nimport Table from \"ant-responsive-table\";\n\n\nexport default class App extends React.Component {\n\n  state = {\n    products : [],\n    subCategories : [],\n    categories : [],\n  }\n\n  componentDidMount() {\n      const apiUrl = 'http://127.0.0.1:8000/product_list/';\n      fetch(apiUrl)\n        .then((response) => response.json())\n        .then((data) => \n            this.setState({\n              products: data\n            })\n      );\n      const apiUrl2 = 'http://127.0.0.1:8000/sub_category_list/';\n      fetch(apiUrl2)\n        .then((response) => response.json())\n        .then((data) => \n            this.setState({\n              subCategories: data\n            })\n      );\n      const apiUrl3 = 'http://127.0.0.1:8000/category_list/';\n      fetch(apiUrl3)\n        .then((response) => response.json())\n        .then((data) => \n            this.setState({\n              categories: data\n            })\n      );\n  }\n\n  \n  render() {\n    let { products,categories,subCategories } = this.state;\n\n    let categoryFilter = [];\n    let subCategoryFilter = [];\n\n    if(categories){\n      categories.map((item, key) =>\n        categoryFilter.push(\n          { text: item.name , value: item.name },\n        ),\n      );\n    }\n\n    if(subCategories){\n      subCategories.map((item, key) =>\n      subCategoryFilter.push(\n          { text: item.name , value: item.name },\n        ),\n      );\n    }\n\n\n    const columns = [{\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      sorter: (a, b) => { return a.name.localeCompare(b.name)},\n      sortDirections: ['descend', 'ascend'],\n    },  {\n      title: 'Sub Category',\n      render: (data) => data.sub_category.name,\n      key: 'sub_category',\n      filters: subCategoryFilter,\n      onFilter: (value, record) => record.sub_category.name.includes(value),\n      sorter: (a, b) => { return a.sub_category.name.localeCompare(b.sub_category.name)},\n      sortDirections: ['descend', 'ascend'],\n    },{\n      title: 'Category',\n      render: (data) => data.sub_category.category.name,\n      key: 'category',\n      filters: categoryFilter,\n      onFilter: (value, record) => record.sub_category.category.name.includes(value),\n      sorter: (a, b) => { return a.sub_category.category.name.localeCompare(b.sub_category.category.name)},\n      sortDirections: ['descend', 'ascend'],\n    }];\n    return (\n      <div>\n        <div className=\"table-operations\">\n          <Button onClick={this.clearFilters}>Add</Button>\n        </div>\n        <div>\n        <Table\n          antTableProps={{\n            showHeader: true,\n            columns,\n            dataSource,\n            pagination: true\n          }}\n          mobileBreakPoint={768}\n        />\n      </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"]},"metadata":{},"sourceType":"module"}