{"ast":null,"code":"var _jsxFileName = \"/home/sunny/PycharmProjects/master/frontend/src/App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './App.css';\nimport { useForm } from \"react-hook-form\";\nimport { Button, Table, Modal, Form, Input, Select } from 'antd';\nconst {\n  Option\n} = Select;\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      subCategories: [],\n      categories: [],\n      visible: false\n    };\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleCancel = e => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleSubmit = e => {\n      this.setState({\n        visible: false\n      });\n      e.preventDefault();\n      const {\n        form\n      } = this.props;\n      console.log(this.props); // form.validateFields((err, values) => {\n      //     if (!err) {\n      //         console.log(values);\n      //         // values.description = this.state.value ? this.state.value.toString('html') : \"\";\n      //         // this.setState({\n      //         //     loading: true\n      //         // })\n      //         // this.props.addCaseActions(values);\n      //         // setTimeout(() => {\n      //         //       this.setState({\n      //         //         loading: false\n      //         //       });\n      //         //     message.success('Case added successfully');\n      //         //     this.props.toggleAdd();\n      //         // }, 1000);\n      //     }\n      // })\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const apiUrl = 'http://127.0.0.1:8000/product_list/';\n    fetch(apiUrl).then(response => response.json()).then(data => this.setState({\n      products: data\n    }));\n    const apiUrl2 = 'http://127.0.0.1:8000/sub_category_list/';\n    fetch(apiUrl2).then(response => response.json()).then(data => this.setState({\n      subCategories: data\n    }));\n    const apiUrl3 = 'http://127.0.0.1:8000/category_list/';\n    fetch(apiUrl3).then(response => response.json()).then(data => this.setState({\n      categories: data\n    }));\n  }\n\n  render() {\n    let {\n      products,\n      categories,\n      subCategories\n    } = this.state;\n    let categoryFilter = [];\n    let subCategoryFilter = [];\n    let dropDownMix = [];\n\n    if (categories) {\n      categories.map((item, key) => categoryFilter.push({\n        text: item.name,\n        value: item.name\n      }));\n    }\n\n    if (subCategories) {\n      dropDownMix = subCategories.map(item => /*#__PURE__*/React.createElement(Option, {\n        key: item.name + \", \" + item.category.name,\n        value: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 48\n        }\n      }, item.name + \", \" + item.category.name));\n      subCategories.map((item, key) => subCategoryFilter.push({\n        text: item.name,\n        value: item.name\n      }));\n    }\n\n    const columns = [{\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      sorter: (a, b) => {\n        return a.name.localeCompare(b.name);\n      },\n      sortDirections: ['descend', 'ascend']\n    }, {\n      title: 'Sub Category',\n      render: data => data.sub_category.name,\n      key: 'sub_category',\n      filters: subCategoryFilter,\n      onFilter: (value, record) => record.sub_category.name.includes(value),\n      sorter: (a, b) => {\n        return a.sub_category.name.localeCompare(b.sub_category.name);\n      },\n      sortDirections: ['descend', 'ascend']\n    }, {\n      title: 'Category',\n      render: data => data.sub_category.category.name,\n      key: 'category',\n      filters: categoryFilter,\n      onFilter: (value, record) => record.sub_category.category.name.includes(value),\n      sorter: (a, b) => {\n        return a.sub_category.category.name.localeCompare(b.sub_category.category.name);\n      },\n      sortDirections: ['descend', 'ascend']\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-operations\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.showModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, \"Add\")), /*#__PURE__*/React.createElement(Table, {\n      columns: columns,\n      dataSource: products,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Modal, {\n      title: \"Add Product\",\n      visible: this.state.visible,\n      onCancel: this.handleCancel,\n      footer: [/*#__PURE__*/React.createElement(Button, {\n        key: \"submit\",\n        type: \"primary\",\n        onClick: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }\n      }, \"Submit\")],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form, Object.assign({}, layout, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"product\",\n      label: \"Product\",\n      rules: [{\n        required: true\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"sub_category\",\n      label: \"Sub Category\",\n      rules: [{\n        required: true\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      allowClear: true,\n      showSearch: true,\n      placeholder: \"Sub Category\",\n      filterOption: (input, option) => option.props.key.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    }, dropDownMix)))));\n  }\n\n}\nReactDOM.render(Form.create( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 29\n  }\n})), document.getElementById('root'));","map":{"version":3,"sources":["/home/sunny/PycharmProjects/master/frontend/src/App.js"],"names":["React","ReactDOM","useForm","Button","Table","Modal","Form","Input","Select","Option","layout","labelCol","span","wrapperCol","App","Component","constructor","props","state","products","subCategories","categories","visible","showModal","setState","handleCancel","e","handleSubmit","preventDefault","form","console","log","bind","componentDidMount","apiUrl","fetch","then","response","json","data","apiUrl2","apiUrl3","render","categoryFilter","subCategoryFilter","dropDownMix","map","item","key","push","text","name","value","category","id","columns","title","dataIndex","sorter","a","b","localeCompare","sortDirections","sub_category","filters","onFilter","record","includes","required","input","option","toLowerCase","indexOf","create","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css' \nimport './App.css';\n\nimport { useForm } from \"react-hook-form\";\n\nimport {Button, Table,Modal, Form, Input, Select  } from 'antd';\n\nconst { Option } = Select;\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\n\n\nexport default class App extends React.Component {\n\n\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  state = {\n    products : [],\n    subCategories : [],\n    categories : [],\n    visible: false,\n  }\n\n  componentDidMount() {\n      const apiUrl = 'http://127.0.0.1:8000/product_list/';\n      fetch(apiUrl)\n        .then((response) => response.json())\n        .then((data) => \n            this.setState({\n              products: data\n            })\n      );\n      const apiUrl2 = 'http://127.0.0.1:8000/sub_category_list/';\n      fetch(apiUrl2)\n        .then((response) => response.json())\n        .then((data) => \n            this.setState({\n              subCategories: data\n            })\n      );\n      const apiUrl3 = 'http://127.0.0.1:8000/category_list/';\n      fetch(apiUrl3)\n        .then((response) => response.json())\n        .then((data) => \n            this.setState({\n              categories: data\n            })\n      );\n  }\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n\n  handleCancel = e => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  handleSubmit = (e) => {\n    this.setState({\n      visible: false,\n    });\n    e.preventDefault();\n    const { form } = this.props;\n    console.log( this.props);\n    // form.validateFields((err, values) => {\n    //     if (!err) {\n    //         console.log(values);\n    //         // values.description = this.state.value ? this.state.value.toString('html') : \"\";\n    //         // this.setState({\n    //         //     loading: true\n    //         // })\n    //         // this.props.addCaseActions(values);\n    //         // setTimeout(() => {\n    //         //       this.setState({\n    //         //         loading: false\n    //         //       });\n    //         //     message.success('Case added successfully');\n    //         //     this.props.toggleAdd();\n    //         // }, 1000);\n    //     }\n    // })\n}\n\n  \n  render() {\n    let { products,categories,subCategories } = this.state;\n\n    let categoryFilter = [];\n    let subCategoryFilter = [];\n    let dropDownMix = [];\n\n\n    if(categories){\n      categories.map((item, key) =>\n        categoryFilter.push(\n          { text: item.name , value: item.name },\n        ),\n      );\n    }\n\n    if(subCategories){\n     \n      dropDownMix =  subCategories.map(item => <Option key={item.name +\", \" + item.category.name} value={item.id}>{item.name +\", \" + item.category.name}</Option>);\n\n\n      subCategories.map((item, key) =>\n        subCategoryFilter.push(\n          { text: item.name , value: item.name },\n        ),\n      );\n    }\n\n\n    const columns = [{\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      sorter: (a, b) => { return a.name.localeCompare(b.name)},\n      sortDirections: ['descend', 'ascend'],\n    },  {\n      title: 'Sub Category',\n      render: (data) => data.sub_category.name,\n      key: 'sub_category',\n      filters: subCategoryFilter,\n      onFilter: (value, record) => record.sub_category.name.includes(value),\n      sorter: (a, b) => { return a.sub_category.name.localeCompare(b.sub_category.name)},\n      sortDirections: ['descend', 'ascend'],\n    },{\n      title: 'Category',\n      render: (data) => data.sub_category.category.name,\n      key: 'category',\n      filters: categoryFilter,\n      onFilter: (value, record) => record.sub_category.category.name.includes(value),\n      sorter: (a, b) => { return a.sub_category.category.name.localeCompare(b.sub_category.category.name)},\n      sortDirections: ['descend', 'ascend'],\n    }];\n    return (\n      <div>\n        <div className=\"table-operations\">\n          <Button onClick={this.showModal}>Add</Button>\n        </div>\n        <Table columns={columns} dataSource={products} />\n        <Modal\n          title=\"Add Product\"\n          visible={this.state.visible}\n          onCancel={this.handleCancel}\n          footer={[\n            <Button key=\"submit\" type=\"primary\" onClick={this.handleSubmit}>\n            Submit</Button>,\n        ]}\n        >\n         <Form {...layout} onSubmit={this.handleSubmit} >\n            <Form.Item  name=\"product\" label=\"Product\" rules={[{ required: true }]}>\n              <Input />\n            </Form.Item>\n            <Form.Item name=\"sub_category\" label=\"Sub Category\" rules={[{ required: true }]}>\n              <Select\n                allowClear={true} showSearch placeholder=\"Sub Category\"\n                filterOption={(input, option) => option.props.key.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n              >\n               {dropDownMix}\n              </Select>\n            </Form.Item>\n            </Form>\n        </Modal>\n        \n      </div>\n    );\n  }\n}\n\n\nReactDOM.render(Form.create(<App />), document.getElementById('root'));\n\n"]},"metadata":{},"sourceType":"module"}