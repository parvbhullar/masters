{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = useSelection;\nexports.SELECTION_INVERT = exports.SELECTION_ALL = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _DownOutlined = _interopRequireDefault(require(\"@ant-design/icons/DownOutlined\"));\n\nvar _treeUtil = require(\"rc-tree/lib/utils/treeUtil\");\n\nvar _conductUtil = require(\"rc-tree/lib/utils/conductUtil\");\n\nvar _util = require(\"rc-tree/lib/util\");\n\nvar _rcTable = require(\"rc-table\");\n\nvar _useMergedState3 = _interopRequireDefault(require(\"rc-util/lib/hooks/useMergedState\"));\n\nvar _checkbox = _interopRequireDefault(require(\"../../checkbox\"));\n\nvar _dropdown = _interopRequireDefault(require(\"../../dropdown\"));\n\nvar _menu = _interopRequireDefault(require(\"../../menu\"));\n\nvar _radio = _interopRequireDefault(require(\"../../radio\"));\n\nvar _devWarning = _interopRequireDefault(require(\"../../_util/devWarning\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _toArray(arr) {\n  return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest();\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n} // TODO: warning if use ajax!!!\n\n\nvar SELECTION_ALL = 'SELECT_ALL';\nexports.SELECTION_ALL = SELECTION_ALL;\nvar SELECTION_INVERT = 'SELECT_INVERT';\nexports.SELECTION_INVERT = SELECTION_INVERT;\n\nfunction getFixedType(column) {\n  return column && column.fixed;\n}\n\nfunction flattenData(data, childrenColumnName) {\n  var list = [];\n  (data || []).forEach(function (record) {\n    list.push(record);\n\n    if (childrenColumnName in record) {\n      list = [].concat(_toConsumableArray(list), _toConsumableArray(flattenData(record[childrenColumnName], childrenColumnName)));\n    }\n  });\n  return list;\n}\n\nfunction useSelection(rowSelection, config) {\n  var _ref = rowSelection || {},\n      preserveSelectedRowKeys = _ref.preserveSelectedRowKeys,\n      selectedRowKeys = _ref.selectedRowKeys,\n      getCheckboxProps = _ref.getCheckboxProps,\n      onSelectionChange = _ref.onChange,\n      onSelect = _ref.onSelect,\n      onSelectAll = _ref.onSelectAll,\n      onSelectInvert = _ref.onSelectInvert,\n      onSelectMultiple = _ref.onSelectMultiple,\n      selectionColWidth = _ref.columnWidth,\n      selectionType = _ref.type,\n      selections = _ref.selections,\n      fixed = _ref.fixed,\n      customizeRenderCell = _ref.renderCell,\n      hideSelectAll = _ref.hideSelectAll,\n      _ref$checkStrictly = _ref.checkStrictly,\n      checkStrictly = _ref$checkStrictly === void 0 ? true : _ref$checkStrictly;\n\n  var prefixCls = config.prefixCls,\n      data = config.data,\n      pageData = config.pageData,\n      getRecordByKey = config.getRecordByKey,\n      getRowKey = config.getRowKey,\n      expandType = config.expandType,\n      childrenColumnName = config.childrenColumnName,\n      tableLocale = config.locale,\n      expandIconColumnIndex = config.expandIconColumnIndex,\n      getPopupContainer = config.getPopupContainer; // ======================== Caches ========================\n\n  var preserveRecordsRef = React.useRef(new Map()); // ========================= Keys =========================\n\n  var _useMergedState = (0, _useMergedState3[\"default\"])(selectedRowKeys || [], {\n    value: selectedRowKeys\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedSelectedKeys = _useMergedState2[0],\n      setMergedSelectedKeys = _useMergedState2[1];\n\n  var _useMemo = (0, React.useMemo)(function () {\n    return checkStrictly ? {\n      keyEntities: null\n    } : (0, _treeUtil.convertDataToEntities)(data, undefined, getRowKey);\n  }, [data, getRowKey, checkStrictly]),\n      keyEntities = _useMemo.keyEntities; // Get flatten data\n\n\n  var flattedData = (0, React.useMemo)(function () {\n    return flattenData(pageData, childrenColumnName);\n  }, [pageData, childrenColumnName]); // Get all checkbox props\n\n  var checkboxPropsMap = (0, React.useMemo)(function () {\n    var map = new Map();\n    flattedData.forEach(function (record, index) {\n      var key = getRowKey(record, index);\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      map.set(key, checkboxProps);\n\n      if (process.env.NODE_ENV !== 'production' && ('checked' in checkboxProps || 'defaultChecked' in checkboxProps)) {\n        (0, _devWarning[\"default\"])(false, 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n      }\n    });\n    return map;\n  }, [flattedData, getRowKey, getCheckboxProps]);\n  var isCheckboxDisabled = (0, React.useCallback)(function (r) {\n    var _a;\n\n    return !!((_a = checkboxPropsMap.get(getRowKey(r))) === null || _a === void 0 ? void 0 : _a.disabled);\n  }, [checkboxPropsMap, getRowKey]);\n\n  var _useMemo2 = (0, React.useMemo)(function () {\n    if (checkStrictly) {\n      return [mergedSelectedKeys, []];\n    }\n\n    var _conductCheck = (0, _conductUtil.conductCheck)(mergedSelectedKeys, true, keyEntities, isCheckboxDisabled),\n        checkedKeys = _conductCheck.checkedKeys,\n        halfCheckedKeys = _conductCheck.halfCheckedKeys;\n\n    return [checkedKeys, halfCheckedKeys];\n  }, [mergedSelectedKeys, checkStrictly, keyEntities, isCheckboxDisabled]),\n      _useMemo3 = _slicedToArray(_useMemo2, 2),\n      derivedSelectedKeys = _useMemo3[0],\n      derivedHalfSelectedKeys = _useMemo3[1];\n\n  var derivedSelectedKeySet = (0, React.useMemo)(function () {\n    var keys = selectionType === 'radio' ? derivedSelectedKeys.slice(0, 1) : derivedSelectedKeys;\n    return new Set(keys);\n  }, [derivedSelectedKeys, selectionType]);\n  var derivedHalfSelectedKeySet = (0, React.useMemo)(function () {\n    return selectionType === 'radio' ? new Set() : new Set(derivedHalfSelectedKeys);\n  }, [derivedHalfSelectedKeys, selectionType]); // Save last selected key to enable range selection\n\n  var _useState = (0, React.useState)(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      lastSelectedKey = _useState2[0],\n      setLastSelectedKey = _useState2[1]; // Reset if rowSelection reset\n\n\n  React.useEffect(function () {\n    if (!rowSelection) {\n      setMergedSelectedKeys([]);\n    }\n  }, [!!rowSelection]);\n  var setSelectedKeys = (0, React.useCallback)(function (keys) {\n    var availableKeys;\n    var records;\n\n    if (preserveSelectedRowKeys) {\n      // Keep key if mark as preserveSelectedRowKeys\n      var newCache = new Map();\n      availableKeys = keys;\n      records = keys.map(function (key) {\n        var record = getRecordByKey(key);\n\n        if (!record && preserveRecordsRef.current.has(key)) {\n          record = preserveRecordsRef.current.get(key);\n        }\n\n        newCache.set(key, record);\n        return record;\n      }); // Refresh to new cache\n\n      preserveRecordsRef.current = newCache;\n    } else {\n      // Filter key which not exist in the `dataSource`\n      availableKeys = [];\n      records = [];\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n\n        if (record !== undefined) {\n          availableKeys.push(key);\n          records.push(record);\n        }\n      });\n    }\n\n    setMergedSelectedKeys(availableKeys);\n\n    if (onSelectionChange) {\n      onSelectionChange(availableKeys, records);\n    }\n  }, [setMergedSelectedKeys, getRecordByKey, onSelectionChange, preserveSelectedRowKeys]); // ====================== Selections ======================\n  // Trigger single `onSelect` event\n\n  var triggerSingleSelection = (0, React.useCallback)(function (key, selected, keys, event) {\n    if (onSelect) {\n      var rows = keys.map(function (k) {\n        return getRecordByKey(k);\n      });\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n\n    setSelectedKeys(keys);\n  }, [onSelect, getRecordByKey, setSelectedKeys]);\n  var mergedSelections = (0, React.useMemo)(function () {\n    if (!selections || hideSelectAll) {\n      return null;\n    }\n\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT] : selections;\n    return selectionList.map(function (selection) {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.selectionAll,\n          onSelect: function onSelect() {\n            setSelectedKeys(data.map(function (record, index) {\n              return getRowKey(record, index);\n            }));\n          }\n        };\n      }\n\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.selectInvert,\n          onSelect: function onSelect() {\n            var keySet = new Set(derivedSelectedKeySet);\n            pageData.forEach(function (record, index) {\n              var key = getRowKey(record, index);\n\n              if (keySet.has(key)) {\n                keySet[\"delete\"](key);\n              } else {\n                keySet.add(key);\n              }\n            });\n            var keys = Array.from(keySet);\n            setSelectedKeys(keys);\n\n            if (onSelectInvert) {\n              (0, _devWarning[\"default\"])(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.');\n              onSelectInvert(keys);\n            }\n          }\n        };\n      }\n\n      return selection;\n    });\n  }, [selections, derivedSelectedKeySet, pageData, getRowKey, onSelectInvert, setSelectedKeys]); // ======================= Columns ========================\n\n  var transformColumns = (0, React.useCallback)(function (columns) {\n    if (!rowSelection) {\n      return columns;\n    } // Support selection\n\n\n    var keySet = new Set(derivedSelectedKeySet); // Record key only need check with enabled\n\n    var recordKeys = flattedData.map(getRowKey).filter(function (key) {\n      return !checkboxPropsMap.get(key).disabled;\n    });\n    var checkedCurrentAll = recordKeys.every(function (key) {\n      return keySet.has(key);\n    });\n    var checkedCurrentSome = recordKeys.some(function (key) {\n      return keySet.has(key);\n    });\n\n    var onSelectAllChange = function onSelectAllChange() {\n      var changeKeys = [];\n\n      if (checkedCurrentAll) {\n        recordKeys.forEach(function (key) {\n          keySet[\"delete\"](key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(function (key) {\n          if (!keySet.has(key)) {\n            keySet.add(key);\n            changeKeys.push(key);\n          }\n        });\n      }\n\n      var keys = Array.from(keySet);\n      setSelectedKeys(keys);\n\n      if (onSelectAll) {\n        onSelectAll(!checkedCurrentAll, keys.map(function (k) {\n          return getRecordByKey(k);\n        }), changeKeys.map(function (k) {\n          return getRecordByKey(k);\n        }));\n      }\n    }; // ===================== Render =====================\n    // Title Cell\n\n\n    var title;\n\n    if (selectionType !== 'radio') {\n      var customizeSelections;\n\n      if (mergedSelections) {\n        var menu = /*#__PURE__*/React.createElement(_menu[\"default\"], {\n          getPopupContainer: getPopupContainer\n        }, mergedSelections.map(function (selection, index) {\n          var key = selection.key,\n              text = selection.text,\n              onSelectionClick = selection.onSelect;\n          return /*#__PURE__*/React.createElement(_menu[\"default\"].Item, {\n            key: key || index,\n            onClick: function onClick() {\n              if (onSelectionClick) {\n                onSelectionClick(recordKeys);\n              }\n            }\n          }, text);\n        }));\n        customizeSelections = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-selection-extra\")\n        }, /*#__PURE__*/React.createElement(_dropdown[\"default\"], {\n          overlay: menu,\n          getPopupContainer: getPopupContainer\n        }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(_DownOutlined[\"default\"], null))));\n      }\n\n      var allDisabled = flattedData.every(function (record, index) {\n        var key = getRowKey(record, index);\n        var checkboxProps = checkboxPropsMap.get(key) || {};\n        return checkboxProps.disabled;\n      });\n      title = !hideSelectAll && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-selection\")\n      }, /*#__PURE__*/React.createElement(_checkbox[\"default\"], {\n        checked: !allDisabled && !!flattedData.length && checkedCurrentAll,\n        indeterminate: !checkedCurrentAll && checkedCurrentSome,\n        onChange: onSelectAllChange,\n        disabled: flattedData.length === 0 || allDisabled\n      }), customizeSelections);\n    } // Body Cell\n\n\n    var renderCell;\n\n    if (selectionType === 'radio') {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        return {\n          node: /*#__PURE__*/React.createElement(_radio[\"default\"], _extends({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(event) {\n              if (!keySet.has(key)) {\n                triggerSingleSelection(key, true, [key], event.nativeEvent);\n              }\n            }\n          })),\n          checked: checked\n        };\n      };\n    } else {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        var indeterminate = derivedHalfSelectedKeySet.has(key); // Record checked\n\n        return {\n          node: /*#__PURE__*/React.createElement(_checkbox[\"default\"], _extends({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            indeterminate: indeterminate,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(_ref2) {\n              var nativeEvent = _ref2.nativeEvent;\n              var shiftKey = nativeEvent.shiftKey;\n              var startIndex = -1;\n              var endIndex = -1; // Get range of this\n\n              if (shiftKey && checkStrictly) {\n                var pointKeys = new Set([lastSelectedKey, key]);\n                recordKeys.some(function (recordKey, recordIndex) {\n                  if (pointKeys.has(recordKey)) {\n                    if (startIndex === -1) {\n                      startIndex = recordIndex;\n                    } else {\n                      endIndex = recordIndex;\n                      return true;\n                    }\n                  }\n\n                  return false;\n                });\n              }\n\n              if (endIndex !== -1 && startIndex !== endIndex && checkStrictly) {\n                // Batch update selections\n                var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\n                var changedKeys = [];\n\n                if (checked) {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet[\"delete\"](recordKey);\n                    }\n                  });\n                } else {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (!keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.add(recordKey);\n                    }\n                  });\n                }\n\n                var keys = Array.from(keySet);\n                setSelectedKeys(keys);\n\n                if (onSelectMultiple) {\n                  onSelectMultiple(!checked, keys.map(function (recordKey) {\n                    return getRecordByKey(recordKey);\n                  }), changedKeys.map(function (recordKey) {\n                    return getRecordByKey(recordKey);\n                  }));\n                }\n              } else {\n                // Single record selected\n                var originCheckedKeys = derivedSelectedKeys;\n\n                if (checkStrictly) {\n                  var checkedKeys = checked ? (0, _util.arrDel)(originCheckedKeys, key) : (0, _util.arrAdd)(originCheckedKeys, key);\n                  triggerSingleSelection(key, !checked, checkedKeys, nativeEvent);\n                } else {\n                  // Always fill first\n                  var result = (0, _conductUtil.conductCheck)([].concat(_toConsumableArray(originCheckedKeys), [key]), true, keyEntities, isCheckboxDisabled);\n                  var _checkedKeys = result.checkedKeys,\n                      halfCheckedKeys = result.halfCheckedKeys;\n                  var nextCheckedKeys = _checkedKeys; // If remove, we do it again to correction\n\n                  if (checked) {\n                    var tempKeySet = new Set(_checkedKeys);\n                    tempKeySet[\"delete\"](key);\n                    nextCheckedKeys = (0, _conductUtil.conductCheck)(Array.from(tempKeySet), {\n                      checked: false,\n                      halfCheckedKeys: halfCheckedKeys\n                    }, keyEntities, isCheckboxDisabled).checkedKeys;\n                  }\n\n                  triggerSingleSelection(key, !checked, nextCheckedKeys, nativeEvent);\n                }\n              }\n\n              setLastSelectedKey(key);\n            }\n          })),\n          checked: checked\n        };\n      };\n    }\n\n    var renderSelectionCell = function renderSelectionCell(_, record, index) {\n      var _renderCell = renderCell(_, record, index),\n          node = _renderCell.node,\n          checked = _renderCell.checked;\n\n      if (customizeRenderCell) {\n        return customizeRenderCell(checked, record, index, node);\n      }\n\n      return node;\n    }; // Columns\n\n\n    var selectionColumn = _defineProperty({\n      width: selectionColWidth,\n      className: \"\".concat(prefixCls, \"-selection-column\"),\n      title: rowSelection.columnTitle || title,\n      render: renderSelectionCell\n    }, _rcTable.INTERNAL_COL_DEFINE, {\n      className: \"\".concat(prefixCls, \"-selection-col\")\n    });\n\n    if (expandType === 'row' && columns.length && !expandIconColumnIndex) {\n      var _columns = _toArray(columns),\n          expandColumn = _columns[0],\n          restColumns = _columns.slice(1);\n\n      var selectionFixed = fixed || getFixedType(restColumns[0]);\n\n      if (selectionFixed) {\n        expandColumn.fixed = selectionFixed;\n      }\n\n      return [expandColumn, _extends(_extends({}, selectionColumn), {\n        fixed: selectionFixed\n      })].concat(_toConsumableArray(restColumns));\n    }\n\n    return [_extends(_extends({}, selectionColumn), {\n      fixed: fixed || getFixedType(columns[0])\n    })].concat(_toConsumableArray(columns));\n  }, [getRowKey, flattedData, rowSelection, derivedSelectedKeys, derivedSelectedKeySet, derivedHalfSelectedKeySet, selectionColWidth, mergedSelections, expandType, lastSelectedKey, checkboxPropsMap, onSelectMultiple, triggerSingleSelection, isCheckboxDisabled]);\n  return [transformColumns, derivedSelectedKeySet];\n}","map":{"version":3,"sources":["/home/sunny/PycharmProjects/master/frontend/node_modules/antd/lib/table/hooks/useSelection.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","Object","defineProperty","exports","value","useSelection","SELECTION_INVERT","SELECTION_ALL","React","_interopRequireWildcard","require","_DownOutlined","_interopRequireDefault","_treeUtil","_conductUtil","_util","_rcTable","_useMergedState3","_checkbox","_dropdown","_menu","_radio","_devWarning","__esModule","_getRequireWildcardCache","WeakMap","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","_toArray","arr","_arrayWithHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableRest","_defineProperty","enumerable","configurable","writable","_extends","assign","target","i","arguments","length","source","apply","_slicedToArray","_iterableToArrayLimit","TypeError","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","err","Array","isArray","_toConsumableArray","_arrayWithoutHoles","_nonIterableSpread","o","minLen","_arrayLikeToArray","n","toString","slice","name","from","test","iter","len","arr2","getFixedType","column","fixed","flattenData","data","childrenColumnName","list","forEach","record","concat","rowSelection","config","_ref","preserveSelectedRowKeys","selectedRowKeys","getCheckboxProps","onSelectionChange","onChange","onSelect","onSelectAll","onSelectInvert","onSelectMultiple","selectionColWidth","columnWidth","selectionType","type","selections","customizeRenderCell","renderCell","hideSelectAll","_ref$checkStrictly","checkStrictly","prefixCls","pageData","getRecordByKey","getRowKey","expandType","tableLocale","locale","expandIconColumnIndex","getPopupContainer","preserveRecordsRef","useRef","Map","_useMergedState","_useMergedState2","mergedSelectedKeys","setMergedSelectedKeys","_useMemo","useMemo","keyEntities","convertDataToEntities","flattedData","checkboxPropsMap","map","index","checkboxProps","process","env","NODE_ENV","isCheckboxDisabled","useCallback","r","_a","disabled","_useMemo2","_conductCheck","conductCheck","checkedKeys","halfCheckedKeys","_useMemo3","derivedSelectedKeys","derivedHalfSelectedKeys","derivedSelectedKeySet","keys","Set","derivedHalfSelectedKeySet","_useState","useState","_useState2","lastSelectedKey","setLastSelectedKey","useEffect","setSelectedKeys","availableKeys","records","newCache","current","triggerSingleSelection","selected","event","rows","k","mergedSelections","selectionList","selection","text","selectionAll","selectInvert","keySet","add","transformColumns","columns","recordKeys","filter","checkedCurrentAll","every","checkedCurrentSome","some","onSelectAllChange","changeKeys","title","customizeSelections","menu","createElement","onSelectionClick","Item","onClick","className","overlay","allDisabled","checked","indeterminate","_","node","e","stopPropagation","nativeEvent","_ref2","shiftKey","startIndex","endIndex","pointKeys","recordKey","recordIndex","rangeKeys","changedKeys","originCheckedKeys","arrDel","arrAdd","result","_checkedKeys","nextCheckedKeys","tempKeySet","renderSelectionCell","_renderCell","selectionColumn","width","columnTitle","render","INTERNAL_COL_DEFINE","_columns","expandColumn","restColumns","selectionFixed"],"mappings":"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","sourcesContent":["\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = useSelection;\nexports.SELECTION_INVERT = exports.SELECTION_ALL = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _DownOutlined = _interopRequireDefault(require(\"@ant-design/icons/DownOutlined\"));\n\nvar _treeUtil = require(\"rc-tree/lib/utils/treeUtil\");\n\nvar _conductUtil = require(\"rc-tree/lib/utils/conductUtil\");\n\nvar _util = require(\"rc-tree/lib/util\");\n\nvar _rcTable = require(\"rc-table\");\n\nvar _useMergedState3 = _interopRequireDefault(require(\"rc-util/lib/hooks/useMergedState\"));\n\nvar _checkbox = _interopRequireDefault(require(\"../../checkbox\"));\n\nvar _dropdown = _interopRequireDefault(require(\"../../dropdown\"));\n\nvar _menu = _interopRequireDefault(require(\"../../menu\"));\n\nvar _radio = _interopRequireDefault(require(\"../../radio\"));\n\nvar _devWarning = _interopRequireDefault(require(\"../../_util/devWarning\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest(); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n// TODO: warning if use ajax!!!\nvar SELECTION_ALL = 'SELECT_ALL';\nexports.SELECTION_ALL = SELECTION_ALL;\nvar SELECTION_INVERT = 'SELECT_INVERT';\nexports.SELECTION_INVERT = SELECTION_INVERT;\n\nfunction getFixedType(column) {\n  return column && column.fixed;\n}\n\nfunction flattenData(data, childrenColumnName) {\n  var list = [];\n  (data || []).forEach(function (record) {\n    list.push(record);\n\n    if (childrenColumnName in record) {\n      list = [].concat(_toConsumableArray(list), _toConsumableArray(flattenData(record[childrenColumnName], childrenColumnName)));\n    }\n  });\n  return list;\n}\n\nfunction useSelection(rowSelection, config) {\n  var _ref = rowSelection || {},\n      preserveSelectedRowKeys = _ref.preserveSelectedRowKeys,\n      selectedRowKeys = _ref.selectedRowKeys,\n      getCheckboxProps = _ref.getCheckboxProps,\n      onSelectionChange = _ref.onChange,\n      onSelect = _ref.onSelect,\n      onSelectAll = _ref.onSelectAll,\n      onSelectInvert = _ref.onSelectInvert,\n      onSelectMultiple = _ref.onSelectMultiple,\n      selectionColWidth = _ref.columnWidth,\n      selectionType = _ref.type,\n      selections = _ref.selections,\n      fixed = _ref.fixed,\n      customizeRenderCell = _ref.renderCell,\n      hideSelectAll = _ref.hideSelectAll,\n      _ref$checkStrictly = _ref.checkStrictly,\n      checkStrictly = _ref$checkStrictly === void 0 ? true : _ref$checkStrictly;\n\n  var prefixCls = config.prefixCls,\n      data = config.data,\n      pageData = config.pageData,\n      getRecordByKey = config.getRecordByKey,\n      getRowKey = config.getRowKey,\n      expandType = config.expandType,\n      childrenColumnName = config.childrenColumnName,\n      tableLocale = config.locale,\n      expandIconColumnIndex = config.expandIconColumnIndex,\n      getPopupContainer = config.getPopupContainer; // ======================== Caches ========================\n\n  var preserveRecordsRef = React.useRef(new Map()); // ========================= Keys =========================\n\n  var _useMergedState = (0, _useMergedState3[\"default\"])(selectedRowKeys || [], {\n    value: selectedRowKeys\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedSelectedKeys = _useMergedState2[0],\n      setMergedSelectedKeys = _useMergedState2[1];\n\n  var _useMemo = (0, React.useMemo)(function () {\n    return checkStrictly ? {\n      keyEntities: null\n    } : (0, _treeUtil.convertDataToEntities)(data, undefined, getRowKey);\n  }, [data, getRowKey, checkStrictly]),\n      keyEntities = _useMemo.keyEntities; // Get flatten data\n\n\n  var flattedData = (0, React.useMemo)(function () {\n    return flattenData(pageData, childrenColumnName);\n  }, [pageData, childrenColumnName]); // Get all checkbox props\n\n  var checkboxPropsMap = (0, React.useMemo)(function () {\n    var map = new Map();\n    flattedData.forEach(function (record, index) {\n      var key = getRowKey(record, index);\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      map.set(key, checkboxProps);\n\n      if (process.env.NODE_ENV !== 'production' && ('checked' in checkboxProps || 'defaultChecked' in checkboxProps)) {\n        (0, _devWarning[\"default\"])(false, 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n      }\n    });\n    return map;\n  }, [flattedData, getRowKey, getCheckboxProps]);\n  var isCheckboxDisabled = (0, React.useCallback)(function (r) {\n    var _a;\n\n    return !!((_a = checkboxPropsMap.get(getRowKey(r))) === null || _a === void 0 ? void 0 : _a.disabled);\n  }, [checkboxPropsMap, getRowKey]);\n\n  var _useMemo2 = (0, React.useMemo)(function () {\n    if (checkStrictly) {\n      return [mergedSelectedKeys, []];\n    }\n\n    var _conductCheck = (0, _conductUtil.conductCheck)(mergedSelectedKeys, true, keyEntities, isCheckboxDisabled),\n        checkedKeys = _conductCheck.checkedKeys,\n        halfCheckedKeys = _conductCheck.halfCheckedKeys;\n\n    return [checkedKeys, halfCheckedKeys];\n  }, [mergedSelectedKeys, checkStrictly, keyEntities, isCheckboxDisabled]),\n      _useMemo3 = _slicedToArray(_useMemo2, 2),\n      derivedSelectedKeys = _useMemo3[0],\n      derivedHalfSelectedKeys = _useMemo3[1];\n\n  var derivedSelectedKeySet = (0, React.useMemo)(function () {\n    var keys = selectionType === 'radio' ? derivedSelectedKeys.slice(0, 1) : derivedSelectedKeys;\n    return new Set(keys);\n  }, [derivedSelectedKeys, selectionType]);\n  var derivedHalfSelectedKeySet = (0, React.useMemo)(function () {\n    return selectionType === 'radio' ? new Set() : new Set(derivedHalfSelectedKeys);\n  }, [derivedHalfSelectedKeys, selectionType]); // Save last selected key to enable range selection\n\n  var _useState = (0, React.useState)(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      lastSelectedKey = _useState2[0],\n      setLastSelectedKey = _useState2[1]; // Reset if rowSelection reset\n\n\n  React.useEffect(function () {\n    if (!rowSelection) {\n      setMergedSelectedKeys([]);\n    }\n  }, [!!rowSelection]);\n  var setSelectedKeys = (0, React.useCallback)(function (keys) {\n    var availableKeys;\n    var records;\n\n    if (preserveSelectedRowKeys) {\n      // Keep key if mark as preserveSelectedRowKeys\n      var newCache = new Map();\n      availableKeys = keys;\n      records = keys.map(function (key) {\n        var record = getRecordByKey(key);\n\n        if (!record && preserveRecordsRef.current.has(key)) {\n          record = preserveRecordsRef.current.get(key);\n        }\n\n        newCache.set(key, record);\n        return record;\n      }); // Refresh to new cache\n\n      preserveRecordsRef.current = newCache;\n    } else {\n      // Filter key which not exist in the `dataSource`\n      availableKeys = [];\n      records = [];\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n\n        if (record !== undefined) {\n          availableKeys.push(key);\n          records.push(record);\n        }\n      });\n    }\n\n    setMergedSelectedKeys(availableKeys);\n\n    if (onSelectionChange) {\n      onSelectionChange(availableKeys, records);\n    }\n  }, [setMergedSelectedKeys, getRecordByKey, onSelectionChange, preserveSelectedRowKeys]); // ====================== Selections ======================\n  // Trigger single `onSelect` event\n\n  var triggerSingleSelection = (0, React.useCallback)(function (key, selected, keys, event) {\n    if (onSelect) {\n      var rows = keys.map(function (k) {\n        return getRecordByKey(k);\n      });\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n\n    setSelectedKeys(keys);\n  }, [onSelect, getRecordByKey, setSelectedKeys]);\n  var mergedSelections = (0, React.useMemo)(function () {\n    if (!selections || hideSelectAll) {\n      return null;\n    }\n\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT] : selections;\n    return selectionList.map(function (selection) {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.selectionAll,\n          onSelect: function onSelect() {\n            setSelectedKeys(data.map(function (record, index) {\n              return getRowKey(record, index);\n            }));\n          }\n        };\n      }\n\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.selectInvert,\n          onSelect: function onSelect() {\n            var keySet = new Set(derivedSelectedKeySet);\n            pageData.forEach(function (record, index) {\n              var key = getRowKey(record, index);\n\n              if (keySet.has(key)) {\n                keySet[\"delete\"](key);\n              } else {\n                keySet.add(key);\n              }\n            });\n            var keys = Array.from(keySet);\n            setSelectedKeys(keys);\n\n            if (onSelectInvert) {\n              (0, _devWarning[\"default\"])(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.');\n              onSelectInvert(keys);\n            }\n          }\n        };\n      }\n\n      return selection;\n    });\n  }, [selections, derivedSelectedKeySet, pageData, getRowKey, onSelectInvert, setSelectedKeys]); // ======================= Columns ========================\n\n  var transformColumns = (0, React.useCallback)(function (columns) {\n    if (!rowSelection) {\n      return columns;\n    } // Support selection\n\n\n    var keySet = new Set(derivedSelectedKeySet); // Record key only need check with enabled\n\n    var recordKeys = flattedData.map(getRowKey).filter(function (key) {\n      return !checkboxPropsMap.get(key).disabled;\n    });\n    var checkedCurrentAll = recordKeys.every(function (key) {\n      return keySet.has(key);\n    });\n    var checkedCurrentSome = recordKeys.some(function (key) {\n      return keySet.has(key);\n    });\n\n    var onSelectAllChange = function onSelectAllChange() {\n      var changeKeys = [];\n\n      if (checkedCurrentAll) {\n        recordKeys.forEach(function (key) {\n          keySet[\"delete\"](key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(function (key) {\n          if (!keySet.has(key)) {\n            keySet.add(key);\n            changeKeys.push(key);\n          }\n        });\n      }\n\n      var keys = Array.from(keySet);\n      setSelectedKeys(keys);\n\n      if (onSelectAll) {\n        onSelectAll(!checkedCurrentAll, keys.map(function (k) {\n          return getRecordByKey(k);\n        }), changeKeys.map(function (k) {\n          return getRecordByKey(k);\n        }));\n      }\n    }; // ===================== Render =====================\n    // Title Cell\n\n\n    var title;\n\n    if (selectionType !== 'radio') {\n      var customizeSelections;\n\n      if (mergedSelections) {\n        var menu = /*#__PURE__*/React.createElement(_menu[\"default\"], {\n          getPopupContainer: getPopupContainer\n        }, mergedSelections.map(function (selection, index) {\n          var key = selection.key,\n              text = selection.text,\n              onSelectionClick = selection.onSelect;\n          return /*#__PURE__*/React.createElement(_menu[\"default\"].Item, {\n            key: key || index,\n            onClick: function onClick() {\n              if (onSelectionClick) {\n                onSelectionClick(recordKeys);\n              }\n            }\n          }, text);\n        }));\n        customizeSelections = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-selection-extra\")\n        }, /*#__PURE__*/React.createElement(_dropdown[\"default\"], {\n          overlay: menu,\n          getPopupContainer: getPopupContainer\n        }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(_DownOutlined[\"default\"], null))));\n      }\n\n      var allDisabled = flattedData.every(function (record, index) {\n        var key = getRowKey(record, index);\n        var checkboxProps = checkboxPropsMap.get(key) || {};\n        return checkboxProps.disabled;\n      });\n      title = !hideSelectAll && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-selection\")\n      }, /*#__PURE__*/React.createElement(_checkbox[\"default\"], {\n        checked: !allDisabled && !!flattedData.length && checkedCurrentAll,\n        indeterminate: !checkedCurrentAll && checkedCurrentSome,\n        onChange: onSelectAllChange,\n        disabled: flattedData.length === 0 || allDisabled\n      }), customizeSelections);\n    } // Body Cell\n\n\n    var renderCell;\n\n    if (selectionType === 'radio') {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        return {\n          node: /*#__PURE__*/React.createElement(_radio[\"default\"], _extends({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(event) {\n              if (!keySet.has(key)) {\n                triggerSingleSelection(key, true, [key], event.nativeEvent);\n              }\n            }\n          })),\n          checked: checked\n        };\n      };\n    } else {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        var indeterminate = derivedHalfSelectedKeySet.has(key); // Record checked\n\n        return {\n          node: /*#__PURE__*/React.createElement(_checkbox[\"default\"], _extends({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            indeterminate: indeterminate,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(_ref2) {\n              var nativeEvent = _ref2.nativeEvent;\n              var shiftKey = nativeEvent.shiftKey;\n              var startIndex = -1;\n              var endIndex = -1; // Get range of this\n\n              if (shiftKey && checkStrictly) {\n                var pointKeys = new Set([lastSelectedKey, key]);\n                recordKeys.some(function (recordKey, recordIndex) {\n                  if (pointKeys.has(recordKey)) {\n                    if (startIndex === -1) {\n                      startIndex = recordIndex;\n                    } else {\n                      endIndex = recordIndex;\n                      return true;\n                    }\n                  }\n\n                  return false;\n                });\n              }\n\n              if (endIndex !== -1 && startIndex !== endIndex && checkStrictly) {\n                // Batch update selections\n                var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\n                var changedKeys = [];\n\n                if (checked) {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet[\"delete\"](recordKey);\n                    }\n                  });\n                } else {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (!keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.add(recordKey);\n                    }\n                  });\n                }\n\n                var keys = Array.from(keySet);\n                setSelectedKeys(keys);\n\n                if (onSelectMultiple) {\n                  onSelectMultiple(!checked, keys.map(function (recordKey) {\n                    return getRecordByKey(recordKey);\n                  }), changedKeys.map(function (recordKey) {\n                    return getRecordByKey(recordKey);\n                  }));\n                }\n              } else {\n                // Single record selected\n                var originCheckedKeys = derivedSelectedKeys;\n\n                if (checkStrictly) {\n                  var checkedKeys = checked ? (0, _util.arrDel)(originCheckedKeys, key) : (0, _util.arrAdd)(originCheckedKeys, key);\n                  triggerSingleSelection(key, !checked, checkedKeys, nativeEvent);\n                } else {\n                  // Always fill first\n                  var result = (0, _conductUtil.conductCheck)([].concat(_toConsumableArray(originCheckedKeys), [key]), true, keyEntities, isCheckboxDisabled);\n                  var _checkedKeys = result.checkedKeys,\n                      halfCheckedKeys = result.halfCheckedKeys;\n                  var nextCheckedKeys = _checkedKeys; // If remove, we do it again to correction\n\n                  if (checked) {\n                    var tempKeySet = new Set(_checkedKeys);\n                    tempKeySet[\"delete\"](key);\n                    nextCheckedKeys = (0, _conductUtil.conductCheck)(Array.from(tempKeySet), {\n                      checked: false,\n                      halfCheckedKeys: halfCheckedKeys\n                    }, keyEntities, isCheckboxDisabled).checkedKeys;\n                  }\n\n                  triggerSingleSelection(key, !checked, nextCheckedKeys, nativeEvent);\n                }\n              }\n\n              setLastSelectedKey(key);\n            }\n          })),\n          checked: checked\n        };\n      };\n    }\n\n    var renderSelectionCell = function renderSelectionCell(_, record, index) {\n      var _renderCell = renderCell(_, record, index),\n          node = _renderCell.node,\n          checked = _renderCell.checked;\n\n      if (customizeRenderCell) {\n        return customizeRenderCell(checked, record, index, node);\n      }\n\n      return node;\n    }; // Columns\n\n\n    var selectionColumn = _defineProperty({\n      width: selectionColWidth,\n      className: \"\".concat(prefixCls, \"-selection-column\"),\n      title: rowSelection.columnTitle || title,\n      render: renderSelectionCell\n    }, _rcTable.INTERNAL_COL_DEFINE, {\n      className: \"\".concat(prefixCls, \"-selection-col\")\n    });\n\n    if (expandType === 'row' && columns.length && !expandIconColumnIndex) {\n      var _columns = _toArray(columns),\n          expandColumn = _columns[0],\n          restColumns = _columns.slice(1);\n\n      var selectionFixed = fixed || getFixedType(restColumns[0]);\n\n      if (selectionFixed) {\n        expandColumn.fixed = selectionFixed;\n      }\n\n      return [expandColumn, _extends(_extends({}, selectionColumn), {\n        fixed: selectionFixed\n      })].concat(_toConsumableArray(restColumns));\n    }\n\n    return [_extends(_extends({}, selectionColumn), {\n      fixed: fixed || getFixedType(columns[0])\n    })].concat(_toConsumableArray(columns));\n  }, [getRowKey, flattedData, rowSelection, derivedSelectedKeys, derivedSelectedKeySet, derivedHalfSelectedKeySet, selectionColWidth, mergedSelections, expandType, lastSelectedKey, checkboxPropsMap, onSelectMultiple, triggerSingleSelection, isCheckboxDisabled]);\n  return [transformColumns, derivedSelectedKeySet];\n}"]},"metadata":{},"sourceType":"script"}